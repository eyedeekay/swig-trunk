#######################################################################
# Makefile for javascript test-suite
#######################################################################

LANGUAGE     = javascript
SCRIPTSUFFIX = _runme.js
srcdir       = @srcdir@
top_srcdir   = @top_srcdir@
top_builddir = @top_builddir@
JS_INCLUDE   = @JSCOREINC@
JS_DLNK      = @JSCOREDYNAMICLINKING@
JSCXXFLAGS  = @JSCXXFLAGS@
JAVASCRIPT_EXE = $(top_srcdir)/Tools/javascript/javascript

C_TEST_CASES = \
	preproc \
	preproc_include

CPP_TEST_CASES = \
	abstract_access \
	abstract_typedef \
	abstract_typedef2 \
	abstract_virtual \
	array_member \
	arrays_global \
	char_binary \
	class_ignore \
	class_scope_weird \
	complextest \
	constover \
	constructor_copy \
	cpp_enum \
	cpp_namespace \
	cpp_static \
	director_alternating \
	enum_template \
	namespace_virtual_method \
	overload_copy \
	ret_by_value \
	struct_value \
	template_static \
	typedef_class \
	typedef_inherit \
	typedef_scope \
	typemap_arrays \
	typemap_delete \
	typemap_namespace \
	typemap_ns_using \
	using1 \
	using2

SKIP_CPP_CASES = @SKIP_CPP_CASES@
SKIP_C_CASES = @SKIP_C_CASES@
SKIP_CPP_STD_CASES = @SKIP_CPP_STD_CASES@
SKIP_MULTI_CPP_CASES = @SKIP_MULTI_CPP_CASES@

include $(srcdir)/../common.mk

ifeq (,$(V8))
JSENGINEFLAG = -jsc
else
JSENGINEFLAG = -v8
endif

# Overridden variables here

# Custom tests - tests with additional commandline options

javascript_exe:
	$(MAKE) -f $(top_builddir)/$(EXAMPLES)/Makefile  JSCXXSRCS='$(JSCXXSRCS)' TOP='$(top_builddir)/$(EXAMPLES)' javascript_exe

# Rules for the different types of tests
%.cpptest: javascript_exe
	$(setup)
	+$(swig_and_compile_cpp)
	$(run_testcase)

%.ctest: javascript_exe
	$(setup)
	+$(swig_and_compile_c)
	$(run_testcase)

%.multicpptest: javascript_exe
	$(setup)
	+$(swig_and_compile_multi_cpp)
	$(run_testcase)

# Runs the testcase. A testcase is only run if
# a file is found which has _runme.js appended after the testcase name.
run_testcase = \
	if [ -f $(srcdir)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX) ]; then \
	  env LD_LIBRARY_PATH=.:$$LD_LIBRARY_PATH $(RUNTOOL) $(JAVASCRIPT_EXE) $(JSENGINEFLAG) -l $* $(srcdir)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX); \
	fi

# Clean
%.clean:
	

clean:
	$(MAKE) -f $(top_builddir)/$(EXAMPLES)/Makefile javascript_clean
