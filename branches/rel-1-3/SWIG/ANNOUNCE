*** ANNOUNCE: SWIG 1.3.12 ***

June 1, 2002

We're pleased to announce the next installment of the SWIG development
effort.  SWIG 1.3.12 is a milestone in SWIG development--it is the
first release that features a nearly complete C++ type system
including full support for namespaces, templates, and more.

New Features in 1.3.12
----------------------

* C++ namespace support *

SWIG-1.3.12 provides full support for C++ namespaces including all C++
namespace related declarations (using, namespace aliases, nested
namespaces, etc.).  Namespace support is fully integrated into the
type system, typemaps, customization features, and every other part of
SWIG.

* New template support */

Minimal template support was available in earlier SWIG releases.
SWIG-1.3.12 builds upon this and provides support for templates,
member templates, template specialization, and template partial
specialization.  New library files are included for wrapping C++
strings and STL vectors.

* Refined PHP4 Module *

Richard Palmer and Sam Lidicott have continued to improve the PHP4
module.

* Improved support on Cygwin *

The Perl, Python, Tcl, Ruby and Java examples run out of the box on 
Cygwin.

* Bug fixes *

Further bug fixes in many parts of SWIG. See the CHANGES file for 
details.

* Updated documentation *

Continued updates of the SWIG Users Manual are included in this
release including entirely new sections on typemaps and exception
handling.  Almost all of the documentation is now up to date with
SWIG-1.3.12 features.  However, a lot of the old documentation is
still incomplete.  We're still working on this.

Availability:
-------------
The release is available for download on Sourceforge at

     http://prdownloads.sourceforge.net/swig/swig-1.3.12.tar.gz

Within the next day, a Windows version will also be made available at

     http://prdownloads.sourceforge.net/swig/swigwin-1.3.12.zip

What's broken?
--------------
This release breaks backwards compatibility with SWIG1.1 in a
substantial manner.  Although we realize that this may be painful,
these incompatibilities are unavoidable due to corrections that need
to be made in order to fix semantic errors in the SWIG1.1
implementation.  However, we hope that these changes are a small price
to pay for some of SWIG's new features including support for C++
templates, overloading, and improved parsing.

As this is a work in progress, a number of features are still missing
or incomplete.  The documentation system is still missing and won't be
reimplemented for some time.  Programmers who have made extensive use of
typemaps may encounter broken code due to the reimplementation of the typemap
system (which has tried to fix a number of subtle problems).

Documentation
-------------
This release contains partially updated documentation.  Almost all new
SWIG features are described in the updated documentation.  The CHANGES
file contains a detailed log of changes and the README file contains
some additional information. 

New Development Process
-----------------------
Starting with SWIG1.3, we are adopting an odd/even version numbering
scheme for SWIG.  Odd version numbers (1.3, 1.5, 1.7, etc...) are
considered to be unstable development releases.  Even numbers
(1.4,1.6,1.8) are stable releases.  The current 1.3 effort is working
to produce a stable 2.0 release.  A stable 2.0 release will not be
made until it can accompanied by fully updated documentation.  In the
meantime, we will continue to make periodic 1.3.x releases.

We need your help!
------------------
Even if you are perfectly happy with SWIG1.1, we can still use your
feedback.  First, we like to know about compilation problems and other
issues concerning the building of SWIG.  Second, if SWIG1.3 is unable
to compile your old interface files, we would like to get information
about the features you are using.  This information will help us find
bugs in the SWIG1.3 release, develop techniques for supporting
backwards compatibility, and write documentation that addresses
specific issues related to migrating from SWIG1.1 to SWIG1.3.

We are also looking for volunteers who would like to work on various
aspects of SWIG development.  SWIG is an unfunded project that would
not exist without volunteers.  We are also looking for the developers
of other SWIG language modules.  If you have developed a SWIG module
and would like to see it incorporated into the new release, please
contact us to obtain SWIG developer access.  We are also more than
willing to help port your module from SWIG1.1 to SWIG1.3.  Please send
email to beazley@cs.uchicago.edu for further information.

Please report problems with this release to swig-dev@cs.uchicago.edu.

--- The SWIG Developers












