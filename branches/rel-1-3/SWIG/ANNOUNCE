*** ANNOUNCE: SWIG 1.3.7 ***

September 3, 2001

Overview
--------
We're pleased to announce the next installment of the SWIG1.3
redevelopment effort.  This release includes more significant
enhancements to SWIG than have appeared in any prior release.
Changes include, but are not limited to the following:

  - Substantial parsing improvements in all areas.  SWIG can
    now parse almost any C or C++ header file.   Furthermore
    the parser builds a complete parse tree that has allowed
    us to improve other areas of SWIG.

  - Support for C++ templates.  Template definitions can now
    be parsed and easily used to generate wrapper code for specific
    template instantiations.

  - Greatly improved support for wrapping overloaded functions
    and methods.

  - Full support for pointers to functions and other more
    complex C datatypes.

  - Limited support for pointers to member functions (experimental)

  - A lot of changes to internal semantics.  const declarations
    are now handled correctly.  volatile is now supported. 
    Generation of default constructors/destructors works properly.
    
  - Improved language modules.

  - Better support for cross-module linking and the %import
    directive.

  - Partially updated documentation describing new features. This
    is the first update to the SWIG documentation in 4 years!

With these changes, SWIG is now more capable than ever before. 

Availability:
-------------
The release is available for download on Sourceforge at

     http://download.sourceforge.net/swig/

What's new?
-----------
There's too many new features to describe.  On the surface, this
release still looks somewhat like SWIG1.1p5 except that a huge 
number of bugs in the type system have been fixed and the SWIG parser
is much more capable.  There are also a variety of new directives
and features that can be used to wrap templates, deal with overloaded functions,
and so forth.  The CHANGES file has complete details.

What's broken?
--------------
This is the first release of SWIG that breaks backwards compatibility
with SWIG1.1 in a substantial manner.  Although we realize that this
may be problematic, these incompatibilities are unavoidable due to 
corrections that needed to be made in order to fix semantic errors
in the SWIG1.1 implementation.   However, we hope that these
changes are a small price to pay for SWIG's other new features including
support for C++ templates, overloading, and a variety of new datatypes.

As this is a work in progress, a number of features are still missing
or incomplete.  The documentation system is still missing and won't be
reimplemented for some time. C++ programmers who make extensive use of
typemaps may encounter a few strange problems (although SWIG will
generate warning messages).

Documentation
-------------
This release contains partially updated documentation.  However,
almost all new SWIG features are described in the updated
documentation.  The README file in the distribution contains more
information.

We need your help!
------------------
Even if you are perfectly happy with SWIG1.1, we can still use your
feedback.  First, we like to know about compilation problems and other
issues concerning the building of SWIG.  Second, if SWIG1.3 is unable
to compile your old interface files, we would like to get information
about the features you are using.  This information will help us find
bugs in the SWIG1.3 release, develop techniques for supporting
backwards compatibility, and write documentation that addresses
specific issues related to migrating from SWIG1.1 to SWIG1.3.
Finally, we are always looking for volunteers to work on aspects of
SWIG development.  Please send email to beazley@cs.uchicago.edu for
details.

Please report problems with this release to swig-dev@cs.uchicago.edu.

--- The SWIG Developers

David Beazley 
William Fulton
Matthias Köppe
Masaki Fukushima






